import { createClient } from '@supabase/supabase-js';
import type { Database } from '../types/supabase'; // Will be generated by Supabase CLI

// These environment variables must be set in your Netlify project settings.
// The SERVICE_ROLE_KEY is used for all backend operations to bypass RLS.
// This is secure as long as your Netlify functions properly authorize requests.
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;


if (!supabaseUrl || !supabaseServiceRoleKey) {
  throw new Error('Supabase URL and Service Role Key must be defined in environment variables for server-side operations.');
}

// This is the "admin" client for use in Netlify functions
export const supabase = createClient<Database>(supabaseUrl, supabaseServiceRoleKey);

// Note: To generate the Database type definition (../types/supabase.ts):
// 1. Install Supabase CLI: npm install supabase --save-dev
// 2. Log in: npx supabase login
// 3. Link your project: npx supabase link --project-ref YOUR_PROJECT_ID
// 4. Generate types: npx supabase gen types typescript --linked > types/supabase.ts
// Replace YOUR_PROJECT_ID with your actual Supabase project ID.
// For now, we'll use Supabase client with 'any' for table/column types if 'Database' is not yet generated.
// To use with 'any' before type generation:
// export const supabase = createClient(supabaseUrl, supabaseAnonKey);
